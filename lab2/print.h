/*
 * printer.h
 *
 * This header file declares functions for the pretty printer used to 
 * display a formatted representation of the abstract syntax tree (AST) 
 * generated by the B-Minor parser. The pretty printer is provided to 
 * help you test the correctness of your parser's AST construction. 
 *
 * Note: The provided pretty printer is an example solution. You may 
 * modify it to fit your specific parser and grammar as needed. 
 * 
 * To use the pretty printer, call the `decl_print` function with the 
 * root of the AST as an argument. This function will traverse the AST 
 * and output its structure in a human-readable format.
 * 
 */

#ifndef PRINT_H
#define PRINT_H

#include "decl.h"

#define PREC_ASSIGN 1
#define PREC_LOG_OR 2
#define PREC_LOG_AND 3
#define PREC_COMPARE 4
#define PREC_ADD 5
#define PREC_MULTIPLY 6
#define PREC_EXPONENTIAL 7
#define PREC_LOG_NOT 8
#define PREC_DECR 9
#define PREC_INCR 9
#define PREC_CALL 10
#define PREC_SUBSCRIPT 10

void decl_print(struct decl *d);
void stmt_print(struct stmt *s, int indent, int indent_current);
void expr_print(struct expr *e, int parent_prec, int is_array_start);
void param_list_print(struct param_list *p);
void type_print(struct type *t);
int get_precedence(struct expr *e);

#endif