# The top level rule indicates how to link everything together into bminor
# Add a rule for each file that needs to be compiled.

bminor: token.h print.o main.o scanner.o helper.o parser.o 
	gcc $^ -o bminor -lm

# This pattern indicates that any .o file depends
# upon the .c file of the same name, and all of the .h files.
# So, if a .o file is needed, it is built automatically.

%.o: %.c *.h
	gcc -Wall -g -c $< -o $@

# Only the files generated by flex and bison need explicit rules.

scanner.c: scanner.flex token.h
	flex -o scanner.c scanner.flex 

parser.c token.h: parser.bison
	bison --defines=token.h --output=parser.c -v parser.bison 

# clean causes all intermediate files to be deleted.

clean:
	rm -f parser.c token.h parser.output scanner.c *.o bminor
